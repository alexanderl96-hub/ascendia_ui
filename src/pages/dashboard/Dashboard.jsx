// import React, { useEffect, useMemo, useRef, useState } from "react";

// import "./dash-board.css";
// import Icon from "../../icons/icon";
// import { Link } from "react-router-dom";
// import OrderTicket from "../../components/OrderTicket";

// export default function Dashboard() {
//     // ---- data (replace with your API) ----
//   const [tops, setTops] = useState(() => [
//     "AAPL","MSFT","NVDA","GOOGL","AMZN","META","TSLA","AVGO","BRK.B","JPM",
//     "UNH","V","LLY","XOM","PG","HD","MA","COST","JNJ","ORCL",
//   ]);
//   const [selected, setSelected] = useState("AAPL");
//   const [tf, setTf] = useState("1Y");

//   // rotation timer state
//   const [pausedUntil, setPausedUntil] = useState(0);
//   const index = useMemo(() => Math.max(0, tops.indexOf(selected)), [tops, selected]);

//   // ---- Auto-rotate featured symbol every 4s unless paused ----
//   useEffect(() => {
//     const tick = () => {
//       const now = Date.now();
//       if (now < pausedUntil || tops.length === 0) return;
//       const next = (index + 1) % tops.length;
//       setSelected(tops[next]);
//     };
//     const id = setInterval(tick, 4000);
//     return () => clearInterval(id);
//   }, [index, tops, pausedUntil]);

//   // helper: pause rotation after manual interaction
//   const pause = (ms = 20000) => setPausedUntil(Date.now() + ms);

//   // click handlers
//   const handlePickSymbol = (sym) => {
//     setSelected(sym);
//     pause();
//     // optionally scroll into view of order panel
//     orderRef.current?.scrollIntoView({ behavior: "smooth", block: "nearest" });
//   };

//   const orderRef = useRef(null);

//   // ---- mock quote (decorate the chart) ----
//   const lastQuote = useMemo(() => {
//     const price = (100 + Math.random() * 900).toFixed(2);
//     const pct = (Math.random() * 3 * (Math.random() > 0.4 ? 1 : -1)).toFixed(2);
//     return { price, pct };
//   }, [selected, tf]);

//   return (
//     <div className="dash-shell">
//       {/* Topbar */}
//       <header className="topbar">
//         <div className="brand">
//           <div className="brand__logo">A</div>
//           <div className="brand__name">Ascendia</div>
//         </div>

//         <nav className="topnav" aria-label="Primary">
//           <a className="topnav__link is-active" href="#">Dashboard</a>
//           <Link className="topnav__link" to="/markets"  aria-label="Markets" >Markets</Link>
//           <Link className="topnav__link" to="/portfolio"  aria-label="portfolio" >Portfolio</Link>
//           <Link className="topnav__link" to="/watchlist"  aria-label="watchlist" >Watchlist</Link>
//           <Link className="topnav__link" to="/orders"  aria-label="orders" >Orders</Link>
//           <Link className="topnav__link" to="/research"  aria-label="research" >Research</Link>
//           <Link className="topnav__link" to="/strategies"  aria-label="strategies" >Strategies</Link>
//           <Link className="topnav__link" to="/news"  aria-label="news" >News</Link>
//           <Link className="topnav__link" to="/settings"  aria-label="settings" >Settings</Link>
//         </nav>

//         <button className="btn btn--upgrade">Upgrade</button>
//       </header>

//       {/* Body with sidebar + content */}
//       <div className="body">
//         {/* Sidebar */}
//         <aside className="sidebar" aria-label="Secondary">
//             {[
//                 "home","chart","bag","bell","mail","compass",
//                 "search","layers","calendar","doc","tag","settings"
//             ].map((k) => (
//                 <button key={k} className="sidebtn" title={k}>
//                 <Icon name={k} />
//                 </button>
//             ))}
//             </aside>

//         {/* Main content grid */}
//         <main className="main">
//           {/* KPI Cards */}
//           <section className="grid kpis">
//             <div className="card kpi">
//               <div className="kpi__label">Total Equity</div>
//               <div className="kpi__value">$125,430.23</div>
//             </div>
//             <div className="card kpi kpi--green">
//               <div className="kpi__label">Today's P&amp;L</div>
//               <div className="kpi__value">+$931.12</div>
//             </div>
//             <div className="card kpi">
//               <div className="kpi__label">Buying Power</div>
//               <div className="kpi__value">$32,145.78</div>
//             </div>
//             <div className="card order">
//               <div className="order__tabs">
//                 <button className="chip chip--active">Buy</button>
//                 <button className="chip">Sell</button>
//               </div>
//               <label className="field">
//                 <span>Quantity</span>
//                 <input type="number" min="0" placeholder="0" />
//               </label>
//               <label className="field">
//                 <span>Limit price</span>
//                 <input type="number" step="0.01" placeholder="$0.00" />
//               </label>
//               <button className="btn btn--primary btn--block">Place Order</button>
//             </div>
//           </section>

//           {/* Chart + Right rail */}
//           <section className="grid mainrow">
//             <div className="card chartcard">
//               <div className="chartcard__head">
//                 <h3>AAPL</h3>
//                 <div className="tf">
//                   {["1D","1W","1M","3M","1Y"].map(t => (
//                     <button key={t} className={`chip ${t==="1Y"?"chip--active":""}`}>{t}</button>
//                   ))}
//                 </div>
//               </div>

//               {/* Fake candlestick area (decorative) */}
//               <div className="candles" role="img" aria-label="price chart">
//                 {Array.from({ length: 60 }).map((_, i) => {
//                   const h = 30 + (Math.sin(i/3)+1)*25 + (Math.random()*8);
//                   const bull = i % 5 !== 0;
//                   return (
//                     <span
//                       key={i}
//                       className={`candle ${bull ? "is-bull" : "is-bear"}`}
//                       style={{ height: `${h}%` }}
//                     />
//                   );
//                 })}
//               </div>

//               {/* Volume bars */}
//               <div className="volume">
//                 {Array.from({ length: 60 }).map((_, i) => (
//                   <span key={i} style={{ height: `${10 + (i%7)*6}%` }} />
//                 ))}
//               </div>
//             </div>

//             {/* Right rail */}
//             <div className="rail">
//               <div className="card watchlist">
//                 <div className="card__title">Watchlist <a href="#">More &rsaquo;</a></div>
//                 <ul className="list">
//                   {[
//                     {t:"MSFT", d:"+0.32%", p:"+33112"},
//                     {t:"GOOGL", d:"+0.03%", p:"153.64"},
//                     {t:"TSLA", d:"-0.11%", p:"32145"},
//                     {t:"AMZN", d:"+0.11%", p:"248.91"},
//                   ].map((r,i)=>(
//                     <li key={i} className="row">
//                       <span className="t">{r.t}</span>
//                       <span className={`d ${r.d.startsWith("-")?"down":"up"}`}>{r.d}</span>
//                       <span className="p">{r.p}</span>
//                     </li>
//                   ))}
//                 </ul>
//               </div>

//               <div className="card blurb">
//                 <div className="card__title">Lorem ipsum</div>
//                 <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod.</p>
//               </div>
//             </div>
//           </section>

//           {/* Bottom row */}
//           <section className="grid bottomrow">
//             <div className="card">
//               <div className="card__title">Recent Orders</div>
//               <table className="table">
//                 <thead>
//                   <tr><th>Order</th><th>Status</th><th>Qty</th><th>Filled</th></tr>
//                 </thead>
//                 <tbody>
//                   {[1,2,3,4].map(i=>(
//                     <tr key={i}>
//                       <td>Buy AAPL</td><td>Filled</td><td>10</td><td>10</td>
//                     </tr>
//                   ))}
//                 </tbody>
//               </table>
//             </div>

//             <div className="card">
//               <div className="card__title">Market News</div>
//               <div className="news">
//                 <article>
//                   <h4>Lorem ipsum ex ma urt m√∫sec</h4>
//                   <p>Lorem ipsum</p>
//                 </article>
//                 <article>
//                   <h4>Extem peur sada lesusae ditam</h4>
//                   <p>Lorem ipsum</p>
//                 </article>
//               </div>
//             </div>
//           </section>
//         </main>
//       </div>
//     </div>
//   );
// }

import React, { useEffect, useMemo, useRef, useState } from "react";
import "./dash-board.css";
import Icon from "../../icons/icon";
import { Link } from "react-router-dom";
import OrderTicket from "../../components/OrderTickets.jsx";
import { useAuth } from "../auth/authContext.jsx";
import { formatNumber } from "../../helper/helper.jsx";
import { DashboardChart } from "../../charts/dashboard-chart.jsx";
import { PortfolioChart } from "../../charts/portfolion-chart.jsx"
import { NewChart } from "../../charts/newchart.jsx"

  const dataChart = [
  ["Day", "Low", "Open", "Close", "High"],

  // Week 1
  ["Mon", 102, 108, 112, 118],
  ["Tue", 110, 114, 109, 116],
  ["Wed", 106, 108, 115, 119],
  ["Thu", 111, 115, 113, 121],
  ["Fri", 109, 112, 107, 114],

  // Week 2
  ["Mon", 108, 110, 116, 122],
  ["Tue", 112, 116, 119, 124],
  ["Wed", 115, 118, 114, 121],
  ["Thu", 111, 113, 117, 120],
  ["Fri", 113, 117, 115, 123],

  // Week 3
  ["Mon", 114, 118, 121, 127],
  ["Tue", 120, 122, 118, 125],
  ["Wed", 116, 119, 123, 128],
  ["Thu", 121, 123, 120, 129],
  ["Fri", 119, 121, 117, 124],

  // Week 4
  ["Mon", 118, 120, 126, 131],
  ["Tue", 124, 126, 123, 130],
  ["Wed", 121, 124, 128, 133],
  ["Thu", 125, 128, 127, 134],
  ["Fri", 123, 126, 122, 129],

  // Week 5
  ["Mon", 122, 125, 129, 135],
  ["Tue", 128, 130, 127, 136],
  ["Wed", 124, 127, 131, 138],
  ["Thu", 129, 131, 128, 139],
  ["Fri", 126, 129, 125, 133],

   ["Mon", 102, 108, 112, 118],
  ["Tue", 110, 114, 109, 116],
  ["Wed", 106, 108, 115, 119],
  ["Thu", 111, 115, 113, 121],
  ["Fri", 109, 112, 107, 114],

  // Week 2
  ["Mon", 108, 110, 116, 122],
  ["Tue", 112, 116, 119, 124],
  ["Wed", 115, 118, 114, 121],
  ["Thu", 111, 113, 117, 120],
  ["Fri", 113, 117, 115, 123],

  // Week 3
  ["Mon", 114, 118, 121, 127],
  ["Tue", 120, 122, 118, 125],
  ["Wed", 116, 119, 123, 128],
  ["Thu", 121, 123, 120, 129],
  ["Fri", 119, 121, 117, 124],

  // Week 4
  ["Mon", 118, 120, 126, 131],
  ["Tue", 124, 126, 123, 130],
  ["Wed", 121, 124, 128, 133],
  ["Thu", 125, 128, 127, 134],
  ["Fri", 123, 126, 122, 129],

  // Week 5
  ["Mon", 122, 125, 129, 135],
  ["Tue", 128, 130, 127, 136],
  ["Wed", 124, 127, 131, 138],
  ["Thu", 129, 131, 128, 139],
  ["Fri", 126, 129, 125, 133],

   ["Mon", 102, 108, 112, 118],
  ["Tue", 110, 114, 109, 116],
  ["Wed", 106, 108, 115, 119],
  ["Thu", 111, 115, 113, 121],
  ["Fri", 109, 112, 107, 114],

  // Week 2
  ["Mon", 108, 110, 116, 122],
  ["Tue", 112, 116, 119, 124],
  ["Wed", 115, 118, 114, 121],
  ["Thu", 111, 113, 117, 120],
  ["Fri", 113, 117, 115, 123],

  // Week 3
  ["Mon", 114, 118, 121, 127],
  ["Tue", 120, 122, 118, 125],
  ["Wed", 116, 119, 123, 128],
  ["Thu", 121, 123, 120, 129],
  ["Fri", 119, 121, 117, 124],

  // Week 4
  ["Mon", 118, 120, 126, 131],
  ["Tue", 124, 126, 123, 130],
  ["Wed", 121, 124, 128, 133],
  ["Thu", 125, 128, 127, 134],
  ["Fri", 123, 126, 122, 129],

  // Week 5
  ["Mon", 122, 125, 129, 135],
  ["Tue", 128, 130, 127, 136],
  ["Wed", 124, 127, 131, 138],
  ["Thu", 129, 131, 128, 139],
  ["Fri", 126, 129, 125, 133],

   ["Mon", 102, 108, 112, 118],
  ["Tue", 110, 114, 109, 116],
  ["Wed", 106, 108, 115, 119],
  ["Thu", 111, 115, 113, 121],
  ["Fri", 109, 112, 107, 114],

  // Week 2
  ["Mon", 108, 110, 116, 122],
  ["Tue", 112, 116, 119, 124],
  ["Wed", 115, 118, 114, 121],
  ["Thu", 111, 113, 117, 120],
  ["Fri", 113, 117, 115, 123],

  // Week 3
  ["Mon", 114, 118, 121, 127],
  ["Tue", 120, 122, 118, 125],
  ["Wed", 116, 119, 123, 128],
  ["Thu", 121, 123, 120, 129],
  ["Fri", 119, 121, 117, 124],

  // Week 4
  ["Mon", 118, 120, 126, 131],
  ["Tue", 124, 126, 123, 130],
  ["Wed", 121, 124, 128, 133],
  ["Thu", 125, 128, 127, 134],
  ["Fri", 123, 126, 122, 129],

  // Week 5
  ["Mon", 122, 125, 129, 135],
  ["Tue", 128, 130, 127, 136],
  ["Wed", 124, 127, 131, 138],
  ["Thu", 129, 131, 128, 139],
  ["Fri", 126, 129, 125, 133],
];

// const RAW_AAL = `
// 19	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 100	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 244	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 325	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 406	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 487	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 568	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 649	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 730	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 811	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 892	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 973	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 1054	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 1135	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 1216	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 1298	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// 1381	0.03	11.27	11.39	11.16	11.25	0.2669	11.24	2025-10-01 16:00:00-04	AAL
// `.trim();

const RAW_GOOGL = `
58	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
139	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
283	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
364	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
445	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
526	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
607	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
688	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
769	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
850	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
931	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1012	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1093	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1174	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1255	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1337	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1422	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1503	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1588	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1673	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1762	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1846	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
1927	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2008	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2298	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2379	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2502	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2583	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2664	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2745	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2826	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
2955	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3036	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3117	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3198	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3279	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3397	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3534	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3615	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3729	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3810	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3891	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
3992	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4073	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4154	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4296	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4377	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4458	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4539	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4633	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4714	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4795	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4876	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
4977	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
5058	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
5181	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
5262	1.8	244.9	246.3	238.61	240.75	0.7404	243.1	2025-10-01 16:00:00-04	GOOGL
5431	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
5516	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
5601	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
5682	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
5763	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
5845	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
5930	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6013	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6094	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6175	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6256	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6337	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6418	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6499	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6580	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6661	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6742	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6823	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6904	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
6985	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7066	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7163	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7250	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7334	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7419	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7504	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7590	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7671	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7752	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7833	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
7914	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8048	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8129	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8281	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8362	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8443	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8529	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8610	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8697	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8780	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8861	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
8942	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9023	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9116	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9209	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9291	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9372	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9453	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9534	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9762	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9847	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
9933	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10034	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10133	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10224	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10305	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10386	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10467	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10548	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10629	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10710	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10832	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10859	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10952	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10963	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10979	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10988	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
10992	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11018	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11029	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11083	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11164	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11176	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11180	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11187	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11197	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11278	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11359	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11446	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11530	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11611	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11692	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11804	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11895	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
11976	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12064	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12145	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12226	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12370	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12452	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12533	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12711	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12858	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
12948	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13029	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13177	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13323	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13405	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13503	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13585	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13667	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13753	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13836	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
13921	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14002	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14083	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14164	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14315	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14401	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14482	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14583	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14665	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14746	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14828	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
14927	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15008	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15089	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15180	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15262	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15418	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15502	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15584	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15665	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15746	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15827	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
15908	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16082	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16164	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16298	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16379	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16463	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16546	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16629	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16710	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16791	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16872	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
16953	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17034	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17115	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17196	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17287	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17375	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17456	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17537	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17618	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17699	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17780	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17861	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
17942	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18023	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18104	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18185	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18266	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18347	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18428	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18507	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18587	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18668	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18749	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18830	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
18991	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
19071	0.79	245.69	246.81	242.3	245.15	0.3226	244.9	2025-10-02 16:00:00-04	GOOGL
19151	-3.41	242.28	246.64	241.655	246.64	-1.3879	245.69	2025-10-03 09:46:05-04	GOOGL
19231	-2.96	242.73	246.64	241.655	246.64	-1.2048	245.69	2025-10-03 10:17:20-04	GOOGL
19290	-3.7	241.99	246.64	241.655	246.64	-1.506	245.69	2025-10-03 10:19:36-04	GOOGL
19371	-3.81	241.88	246.64	241.655	246.64	-1.5507	245.69	2025-10-03 10:22:57-04	GOOGL
19451	-2.35	243.34	246.64	241.655	246.64	-0.9565	245.69	2025-10-03 10:54:41-04	GOOGL
19532	-2.41	243.28	246.64	241.655	246.64	-0.9809	245.69	2025-10-03 10:58:01-04	GOOGL
19613	-2.335	243.355	246.64	241.655	246.64	-0.9504	245.69	2025-10-03 11:00:16-04	GOOGL
19694	-2.1463	243.5437	246.64	241.655	246.64	-0.8736	245.69	2025-10-03 11:02:48-04	GOOGL
19775	-1.9497	243.7403	246.64	241.655	246.64	-0.7936	245.69	2025-10-03 11:05:53-04	GOOGL
19856	-1.995	243.695	246.64	241.655	246.64	-0.812	245.69	2025-10-03 11:09:11-04	GOOGL
19946	-2.02	243.67	246.64	241.655	246.64	-0.8222	245.69	2025-10-03 11:11:30-04	GOOGL
20033	-2.02	243.67	246.64	241.655	246.64	-0.8222	245.69	2025-10-03 11:14:47-04	GOOGL
20114	-1.94	243.75	246.64	241.655	246.64	-0.7896	245.69	2025-10-03 11:17:52-04	GOOGL
20195	-1.69	244	246.64	241.655	246.64	-0.6879	245.69	2025-10-03 11:20:56-04	GOOGL
20276	-1.615	244.075	246.64	241.655	246.64	-0.6573	245.69	2025-10-03 11:22:35-04	GOOGL
20357	-1.355	244.335	246.64	241.655	246.64	-0.5515	245.69	2025-10-03 11:25:55-04	GOOGL
20438	-1.5725	244.1175	246.64	241.655	246.64	-0.64	245.69	2025-10-03 11:28:56-04	GOOGL
20519	-1.15	244.54	246.64	241.655	246.64	-0.4681	245.69	2025-10-03 11:31:25-04	GOOGL
20600	-0.955	244.735	246.64	241.655	246.64	-0.3887	245.69	2025-10-03 11:34:28-04	GOOGL
20681	-0.81	244.88	246.64	241.655	246.64	-0.3297	245.69	2025-10-03 11:36:58-04	GOOGL
20762	-1.565	244.125	246.64	241.655	246.64	-0.637	245.69	2025-10-03 11:40:01-04	GOOGL
20843	-2.2	243.49	246.64	241.655	246.64	-0.8954	245.69	2025-10-03 11:42:31-04	GOOGL
20924	-1.9194	243.7706	246.64	241.655	246.64	-0.7812	245.69	2025-10-03 11:45:31-04	GOOGL
21005	-1.605	244.085	246.64	241.655	246.64	-0.6533	245.69	2025-10-03 11:48:00-04	GOOGL
21086	-1.3	244.39	246.64	241.655	246.64	-0.5291	245.69	2025-10-03 11:51:04-04	GOOGL
21167	-1.065	244.625	246.64	241.655	246.64	-0.4335	245.69	2025-10-03 11:54:05-04	GOOGL
21248	-0.89	244.8	246.64	241.655	246.64	-0.3622	245.69	2025-10-03 11:56:35-04	GOOGL
21329	-0.925	244.765	246.64	241.655	246.64	-0.3765	245.69	2025-10-03 11:59:05-04	GOOGL
21410	-0.67	245.02	246.64	241.655	246.64	-0.2727	245.69	2025-10-03 12:02:08-04	GOOGL
21491	-0.675	245.015	246.64	241.655	246.64	-0.2747	245.69	2025-10-03 12:04:41-04	GOOGL
21652	-0.38	245.31	246.64	241.655	246.64	-0.1547	245.69	2025-10-03 12:19:55-04	GOOGL
21733	-0.1352	245.5548	246.64	241.655	246.64	-0.055	245.69	2025-10-03 12:22:10-04	GOOGL
`.trim();

export default function Dashboard() {
    // DESTRUCTURING CHANGE: Get safeFetch along with the user details
    const { userId , accountNumber, safeFetch, buyingPower, equity, portfolioValue } = useAuth() 
    
  // ---- Top 20 symbols (replace with your API) ----
  const [tops, setTops] = useState(() => [
    "AAPL","MSFT","NVDA","GOOGL","AMZN",
    // "META","TSLA",
    // "AVGO","BRK.B","JPM",
    // "UNH","V","LLY","XOM","PG","HD","MA","COST","JNJ","ORCL",
  ]);

  const [companies, setCompanies] = useState({
    "AAPL": "Apple Inc.",
    "MSFT": "Microsoft Corporation",
    "NVDA": "NVIDIA Corporation",
    "GOOGL":  "Alphabet Inc. (Class A)",
    "AMZN": "Amazon.com, Inc."
});

const parsed = parseAALtoCandles(RAW_GOOGL); // or RAW_AAL
const fullData = [parsed.dataCharts, ...parsed.rows];

  const [selected, setSelected] = useState("AAPL");
  const [tf, setTf] = useState("1D");
  const [chooseSymbol, setChooseSymbol] = useState("")
  const [chartValueLength, setChartValueLength] = useState(dataChart.dataCharts)

  // rotation timer state
  const [pausedUntil, setPausedUntil] = useState(0);
  const index = useMemo(() => Math.max(0, tops.indexOf(selected)), [tops, selected]);

//  function parseAALtoCandles(raw) {
//   const lines = raw.split(/\r?\n/).filter(Boolean);
//   const rows = lines.map((line, idx) => {
//     const t = line.trim().split(/\s+/); // splits by tabs OR spaces
//     const open  = parseFloat(t[2]);
//     const high  = parseFloat(t[3]);
//     const low   = parseFloat(t[4]);
//     const close = parseFloat(t[5]);
//     const ts    = t[8];                 // "2025-10-01 16:00:00-04"
//     // label: use HH:MM from timestamp + index to avoid duplicates
//     const label =
//       ts?.includes(" ")
//         ? ts.split(" ")[1].slice(0,5) + ` #${idx+1}`
//         : `pt ${idx+1}`;
//     return [label, low, open, close, high];
//   });

//   // OPTIONAL: sort by time if timestamps differ (yours are identical)
//   // rows.sort((a,b)=> new Date(aTs) - new Date(bTs))

//   return [["Day", "Low", "Open", "Close", "High"], ...rows];
// } 

function parseAALtoCandles(raw) {
  const lines = raw.trim().split(/\r?\n/).filter(Boolean);

  const header = [
    "Day",
    "Low",
    "Open",
    "Close",
    "High",
    { type: "string", role: "tooltip", p: { html: true } },
  ];

  const records = [];   // [{ date, row }]
  const rows = [];      // Google rows only

  for (let i = 0; i < lines.length; i++) {
    const t = lines[i].trim().split(/\s+/);
    const open  = parseFloat(t[2]);
    const high  = Number(t[3]) + 1;   // your tweak
    const low   = Number(t[4]) - 1;   // your tweak
    const close = parseFloat(t[5]);
    const ts    = t[8] || "";         // "YYYY-MM-DD HH:MM:SS-04"
    const date  = ts.split(" ")[0] || "";

    const label = ts.includes(" ")
      ? ts.split(" ")[1].slice(0, 5) + ` #${i + 1}`
      : `pt ${i + 1}`;

    const chgAbs = close - open;
    const chgPct = (chgAbs / open) * 100;
    const dir = chgAbs >= 0 ? "‚Üë" : "‚Üì";
    const clr = chgAbs >= 0 ? "#10b981" : "#ef4444";

    const tooltip = `
      <div style="padding:6px 8px;font:6px/1.4 system-ui;">
        <div style="margin-bottom:4px;"><strong>${label}</strong></div>
        <div>O: ${open.toFixed(2)} H: ${high.toFixed(2)} L: ${low.toFixed(2)} C: ${close.toFixed(2)}</div>
        <div style="color:${clr};margin-top:2px;">
          ${dir} ${chgAbs >= 0 ? "+" : ""}${chgAbs.toFixed(2)}
          (${chgAbs >= 0 ? "+" : ""}${chgPct.toFixed(2)}%)
        </div>
      </div>
    `.trim();

    const row = [label, low, open, close, high, tooltip]; // required order tooltip
    rows.push(row);
    records.push({ date, row });
  }

  return { header, rows, records };
}



  // Auto-rotate featured symbol every 4s unless paused
  useEffect(() => {
    const id = setInterval(() => {
      const now = Date.now();
      if (now < pausedUntil || tops.length === 0) return;
      const next = (index + 1) % tops.length;
      setSelected(tops[next]);
    }, 4000);
    return () => clearInterval(id);
  }, [index, tops, pausedUntil]);

  // Pause rotation after manual interaction
  const pause = (ms = 20000) => setPausedUntil(Date.now() + ms);

  // Clicking a row or the chart selects the symbol + pauses rotation
  const handlePickSymbol = (sym) => {
    setSelected(sym);
    setChooseSymbol(sym)
    pause();
    orderRef.current?.scrollIntoView({ behavior: "smooth", block: "nearest" });
  };

  const orderRef = useRef(null);

  // Mock quote for the header pill (decorate)
  const lastQuote = useMemo(() => {
    const price = (100 + Math.random() * 900).toFixed(2);
    const pct = (Math.random() * 3 * (Math.random() > 0.4 ? 1 : -1)).toFixed(2);
    return { price, pct };
  }, [selected, tf]);

  function pnll( equity, buyingPower) {
    return +(equity - buyingPower).toFixed(2);
  }

  const pnlTotal = pnll(portfolioValue, 100000);



// const checkLength = (value) =>{
//     if(value == "1D"){
//       setChartValueLength(dataChart.slice(0, 11))
//     }else if(value == "1W"){
//        setChartValueLength(dataChart.slice(0, 21))
//     }
//     else if(value == "1M"){
//       setChartValueLength(dataChart.slice(0, 36))
//     }else if(value == "3M"){
//       setChartValueLength(dataChart.slice(0, 41))
//     }else{
//       setChartValueLength(dataChart)
//     }
// }


function checkLength(tf, opts = {}) {
  const header = parsed.header;
  const body = fullData.slice(1);

  // choose end date: explicit override or latest in feed
  const latestDate = parsed.records[parsed.records.length - 1]?.date;
  const endDateStr = opts.date || latestDate;
  if (!endDateStr) {
    // no data => nothing to show
    setChartValueLength([header]);
    return;
  }

  // build date window for the TF
  const [startStr, endStr] = computeDateWindow(tf, endDateStr);

  // filter records within [start, end]
  const rangedRows = parsed.records
    .filter(r => r.date >= startStr && r.date <= endStr)
    .map(r => r.row);

  if (rangedRows.length > 0 && tf === "1D") {
    setChartValueLength([header, ...rangedRows.slice(0,11)]);
    return;
  }

  // Fallback (if no matches‚Äîe.g., weekend-only date): show latest N rows
  const fallbackSizes = {
    "1D": 11, "2D": 15, "3D": 20,
    "1W": 25, "2W": 30,
    "1M": 35, "3M": 40, // keep your legacy picks
    "1Y": 50,
  };
  const want = fallbackSizes[tf] ?? body.length;
  const recent = body.slice(-Math.min(want, body.length));
  setChartValueLength([header, ...recent]);
}


useEffect(() => {
  // default timeframe when component mounts
  checkLength("1D"); // or "1W" etc.
}, []);

console.log(chartValueLength)

  return (
    <div className="dash-shell">
      {/* Topbar */}
      <header className="topbar">
        <Link  className="brand" to="/dashboard">
          <div className="brand__logo">A</div>
          <div className="brand__name">Ascendia</div>
        </Link>

        <nav className="topnav" aria-label="Primary">
          <a className="topnav__link is-active" href="#!">Dashboard</a>
          <Link className="topnav__link" to="/markets">Markets</Link>
          <Link className="topnav__link" to="/portfolio">Portfolio</Link>
          <Link className="topnav__link" to="/watchlists">Watchlist</Link>
          <Link className="topnav__link" to="/orders">Orders</Link>
          <Link className="topnav__link" to="/research">Research</Link>
          <Link className="topnav__link" to="/strategies">Strategies</Link>
          <Link className="topnav__link" to="/news">News</Link>
          <Link className="topnav__link" to="/settings/profile">Settings</Link>
        </nav>

        <button className="btn btn--upgrade">Upgrade</button>
      </header>

      {/* Body with sidebar + content */}
      <div className="body">
        {/* Sidebar */}
        <aside className="sidebar" aria-label="Secondary">
          {[
            "chart","bag","bell","mail","compass",
            "search","layers","calendar","doc","tag","settings"
          ].map((k) => (
            <button key={k} className="sidebtn" aria-label={k}>
          <Icon name={k} />
          {/* Visible to screen readers, hidden visually */}
          <span className="sr-only">{k}</span>
          {/* Tooltip label shown on hover/focus */}
          <span className="sidebtn-label" role="tooltip">{k}</span>
        </button>
          ))}
        </aside>

        {/* Main content grid */}
        <main className="main">
          {/* KPI + Order */}
          <section className="grid kpis">
            <div className="card kpi">
              <div className="kpi__label">Total Equity</div>
              <div className="kpi__value">${formatNumber(equity)}</div>
            </div>
            <div className="card kpi kpi--green">
              <div className="kpi__label">Today's P&amp;L</div>
              <div className="kpi__value">+${formatNumber(pnlTotal)}</div>
            </div>
            <div className="card kpi">
              <div className="kpi__label">Buying Power</div>
              <div className="kpi__value">${formatNumber(buyingPower)}</div>
            </div>

            {/* Replace static order form with real OrderTicket */}
                <OrderTicket
                    defaultSymbol={chooseSymbol}
                    submitUrl="http://localhost:8080/api/v1/orders"
                    userId={userId}
                    accountNumber={accountNumber}
                    fetchApi={safeFetch} // <-- PASS safeFetch HERE
                    onSuccess={(resp) => console.log("order ok", resp)}
                    onError={(msg) => console.error("order error", msg)}
                    />
          </section>

          {/* Chart + Right rail */}
          <section className="grid mainrow">
            {/* Featured chart card (clickable to select current symbol) */}
            <div
              className="card chartcard clickable"
              onClick={() => handlePickSymbol(selected)}
              title={`Open order ticket for ${selected}`}
            >
              <div className="chartcard__head">
                <h3>{companies[`${selected}`] + " " } ( {selected} )</h3>
                <div className="tf" role="tablist" aria-label="Timeframe">
                  {["1D","2D", "3D","1W", "2W","1M","3M","1Y"].map(t => (
                    <button
                      key={t}
                      role="tab"
                      aria-selected={tf === t}
                      onClick={(e) => { e.stopPropagation(); setTf(t); pause(); checkLength(t) }}
                      className={`chip ${tf===t?"chip--active":""}`}
                    >
                      {t}
                    </button>
                  ))}
                </div>
              </div>

                {/* <DashboardChart chartValueLength={chartValueLength} /> */}
                <NewChart />

              {/* Fake candlestick area (decorative) */}
              {/* <div className="candles" role="img" aria-label="price chart">
                {Array.from({ length: 60 }).map((_, i) => {
                  const h = 30 + (Math.sin(i/3)+1)*25 + (Math.random()*8);
                  const bull = i % 5 !== 0;
                  return (
                    <span
                      key={i}
                      className={`candle ${bull ? "is-bull" : "is-bear"}`}
                      style={{ height: `${h}%` }}
                    />
                  );
                })}

               
              </div> */}

              {/* Volume bars */}
              {/* <div className="volume">
                {Array.from({ length: 60 }).map((_, i) => (
                  <span key={i} style={{ height: `${10 + (i%7)*6}%` }} />
                ))}
              </div> */}

              {/* Current quote pill in corner */}
              {/* <div className="quote-pill">
                <span className="s">{selected}</span>
                <span className="p">${lastQuote.price}</span>
                <span className={`d ${Number(lastQuote.pct) >= 0 ? "up":"down"}`}>
                  {Number(lastQuote.pct) >= 0 ? "+" : ""}{lastQuote.pct}%
                </span>
              </div> */}

              
            </div>
        

            {/* Right rail <Link to="/watchlists">M &rsaquo;</Link> */}
            <div className="rail">
              <div className="card watchlist">
                <div className="card__title">Top 20 Live Market</div>
                <ul className="list">
                  {tops.map((sym) => {
                    const delta = (Math.random()*2*(Math.random()>0.5?1:-1)).toFixed(2) + "%";
                    const price = (100 + Math.random()*900).toFixed(2);
                    const isActive = sym === selected;
                    return (
                      <div
                        key={sym}
                        className={`rowdash row--clickable ${isActive ? "is-active":""}`}
                        onClick={() => handlePickSymbol(sym) }
                        title={`Select ${sym}`}
                      >
                        <div className="t">{sym}</div>
                        <div className={`d ${delta.startsWith("-") ? "down":"up"}`}>{delta}</div>
                        <div className="p">{price}</div>
                      </div>
                    );
                  })}
                </ul>
              </div>

              <div className="card blurb">
                <div className="card__title">Tip</div>
                <p>Click the chart or any symbol above to prefill the order panel. Rotation pauses for 20s after you interact.</p>
              </div>
            </div>
          </section>

          {/* Bottom row */}
          <section className="grid bottomrow">
            <div className="card">
              <div className="card__title">Recent Orders</div>
              <table className="table">
                <thead>
                  <tr><th>Order</th><th>Status</th><th>Qty</th><th>Filled</th></tr>
                </thead>
                <tbody>
                  {[1,2,3,4].map(i=>(
                    <tr key={i}>
                      <td>Buy {selected}</td><td>Filled</td><td>10</td><td>10</td>
                    </tr>
                  ))}
                </tbody>
              </table>
            </div>

            <div className="card">
              <div className="card__title">Market News</div>
              <div className="news">
                <article>
                  <h4>Lorem ipsum ex ma urt m√∫sec</h4>
                  <p>Lorem ipsum</p>
                </article>
                <article>
                  <h4>Extem peur sada lesusae ditam</h4>
                  <p>Lorem ipsum</p>
                </article>
              </div>
            </div>
          </section>
             
        </main>
      </div>
    </div>
  );
}


// helpers ------------------------------------------------------------
function fmtYMD(d) {
  const y = d.getFullYear();
  const m = String(d.getMonth() + 1).padStart(2, "0");
  const da = String(d.getDate()).padStart(2, "0");
  return `${y}-${m}-${da}`;
}
function parseYMD(s) {
  // s like "2025-10-01"
  const [y, m, d] = s.split("-").map(Number);
  // new Date(year, monthIndex, day) uses local tz; good enough for filtering by date
  return new Date(y, m - 1, d);
}
function addDays(d, delta) {
  const nd = new Date(d);
  nd.setDate(nd.getDate() + delta);
  return nd;
}
function addMonths(d, delta) {
  const nd = new Date(d);
  const day = nd.getDate();
  nd.setMonth(nd.getMonth() + delta);
  // keep day in range for month edges
  if (nd.getDate() !== day) nd.setDate(0);
  return nd;
}
function addYears(d, delta) {
  const nd = new Date(d);
  nd.setFullYear(nd.getFullYear() + delta);
  return nd;
}

/**
 * Returns [startDateStr, endDateStr] in "YYYY-MM-DD"
 * endDateStr = latest feed date (or opts.date), inclusive
 */
function computeDateWindow(tf, endDateStr) {
  const end = parseYMD(endDateStr);
  let start;

  switch (tf) {
    case "1D": start = end; break;                             // same day
    case "2D": start = addDays(end, -1); break;                // end and previous day
    case "3D": start = addDays(end, -2); break;
    case "1W": start = addDays(end, -6); break;                // 7 calendar days
    case "2W": start = addDays(end, -13); break;
    case "1M": start = addMonths(end, -1); break;              // 1 calendar month
    case "3M": start = addMonths(end, -3); break;
    case "1Y": start = addYears(end, -1); break;
    default:   start = parseYMD("0001-01-01");                 // everything
  }
  return [fmtYMD(start), fmtYMD(end)];
}
